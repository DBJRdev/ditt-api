# This file is a "template" of which env vars needs to be defined in your configuration or in an .env file
# Set variables here that may be different on each deployment target of the app, e.g. development, staging, production.
# https://symfony.com/doc/current/best_practices/configuration.html#infrastructure-related-configuration

###> symfony/framework-bundle ###
APP_ENV=dev
APP_DEBUG=1
APP_SECRET=67d829bf61dc5f87a73fd814e2c9f629
###< symfony/framework-bundle ###

###> doctrine/doctrine-bundle ###
# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
#
# DATABASE_URL="sqlite:///%kernel.project_dir%/var/data.db"
# DATABASE_URL="mysql://db_user:db_password@127.0.0.1:3306/db_name?serverVersion=5.7"
DATABASE_URL="postgresql://postgres:pass@db/ditt?serverVersion=11&charset=utf8"
DATABASE_URL_TEST="postgresql://postgres:pass@db/docker_test?serverVersion=11&charset=utf8"
###< doctrine/doctrine-bundle ###

###> nelmio/cors-bundle ###
CORS_ALLOW_ORIGIN='^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$'
###< nelmio/cors-bundle ###

###> lexik/jwt-authentication-bundle ###
# Key paths should be relative to the project directory
JWT_PASSPHRASE=f6500706891b3ff9c2761e2d4f1327de
JWT_TOKEN_TTL=3600
###< lexik/jwt-authentication-bundle ###

###> symfony/swiftmailer-bundle ###
MAILER_EMAIL="admin@example.com"
MAILER_TRANSPORT=smtp
MAILER_ENCRYPTION=tls
MAILER_PORT=1025
MAILER_HOST=mail
MAILER_NAME="DITT"
MAILER_USER=local@host.com
MAILER_PASSWORD=""
###< symfony/swiftmailer-bundle ###

CLIENT_SPECIAL_APPROVALS_URL="http://localhost:8080/special-approvals"
CLIENT_NEW_PASSWORD_URL="http://localhost:8080/new-password/%s"

### Restricts usage of user's apiToken in header using IP filter (JSON array). Usage:
###  * USER_API_TOKEN_IP_FILTER="" => access allowed for all IPs
###  * USER_API_TOKEN_IP_FILTER=[] => access disallowed for all IPs
###  * USER_API_TOKEN_IP_FILTER="[\"123.123.123.123\", \"124.124.124.124\"]" => access allowed for specified IPs
USER_API_TOKEN_IP_FILTER=""
